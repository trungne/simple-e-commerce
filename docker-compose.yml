version: '3.6'

services:
  postgres_db:
    image: postgres:15.1-alpine
    env_file: .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    depends_on:
      - postgres_db
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_CLIENTVAR: "clientvar"
    working_dir: /app
    ports:
      - "3000:3000"
    image: simple-e-commerce
    environment:
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
      - DB_PORT=5432
      - DB_DOMAIN=postgres_db
      - NODE_ENV=production

  migration:
    depends_on:
      - postgres_db
      - app
    build:
      context: .
      dockerfile: Dockerfile.migration
    environment:
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
      - DB_PORT=5432
      - DB_DOMAIN=postgres_db
      - NODE_ENV=production

  ngrok:
    profiles:
      - live
    depends_on:
      - app
    image: ngrok/ngrok:latest
    restart: unless-stopped
    command:
      - "start"
      - "--all"
      - "--config"
      - "/etc/ngrok.yml"
      - "--authtoken"
      - "${NGROK_AUTH_TOKEN}"
    volumes:
      - ./ngrok.yml:/etc/ngrok.yml
    ports:
      - 4040:4040
    network_mode: host

networks:
  default:
    name: simple-e-commerce-network

volumes:
  postgres_db:
